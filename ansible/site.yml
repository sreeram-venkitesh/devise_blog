# ansible/site.yml

---
- hosts: rails
  remote_user: sreeram
  become: yes
  tasks:
    - name: Update all packages to the latest version
      apt:
        upgrade: dist
    - name: Add deploy user
      user:
        name: sreeram
        shell: /bin/bash
    - name: Add SSH key to server for deploy user
      authorized_key:
        user: sreeram
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC/spCXGRTFfP/J9ZLQuLF4bRf5Pjzx0wAdnLsUAsSBRN30aA9s22uDdw6c6RrEiD0vjsvygGR6g4GixJadzEXaQMZ0fH8hvX63WeUDJzqmXXaaaFz79WSQLKgSKhJcbYRkzrXeOoIqBYwvDRue0QPud9Fu2kPo27tjkrg7ol9zAYyuaxrwdUaKGuHmHqwScIScP7EKVEjPY7Cy4AoIdWryPn5YBmX3DJs48qxRo2pDGlQjVzqQKwswGl0pJVUZQU7p9LZJOE/pQqBLQQ23Iw6VtJaO72rnbZ3nEmKy8XZFUsIKW6E9wZ8hv0cKOG1BKHRClhRmq3tKcEvN3FLM+9PzYp5XZ9iCEGAUW91fJR8b1+cwTpeANRRJqJSswHhBezxjMwnlWOWxooS+x/5VwVKNdzJEwHsVPdBHvPWm2m5PwlIvF/ouS3dfcA2zUOarsn+3W1Jp+4nSJcbdjzvycOWNgif0zVQfWlOnrA8qO1Qnrj6ukA44YzF2GqszMVBE6h8= sreeram@Sreerams-MBP.domain.name"
    - name: Install Ruby dependencies
      apt:
        name: "{{ item }}"
      with_items:
        - gcc
        - autoconf
        - bison
        - build-essential
        - libssl-dev
        - libyaml-dev
        - libreadline6-dev
        - zlib1g-dev
        - libncurses5-dev
        - libffi-dev
        - libgdbm6
        - libgdbm-dev
        - sqlite3
        - libsqlite3-dev

    - name: Install rbenv
      become: yes
      become_user: sreeram 
      git:
        repo: "https://github.com/rbenv/rbenv.git"
        dest: /home/sreeram/.rbenv
        depth: 1
        accept_hostkey: yes
        clone: yes
        update: yes

    - name: Install ruby-build
      become: yes
      become_user: sreeram
      git:
        repo: "https://github.com/rbenv/ruby-build.git"
        dest: "/home/sreeram/.rbenv/plugins/ruby-build"
        depth: 1

    - name: Install rbenv-vars
      become: yes
      become_user: sreeram
      git:
        repo: "https://github.com/rbenv/rbenv-vars.git"
        dest: "/home/sreeram/.rbenv/plugins/rbenv-vars"
        depth: 1

    - name: Ensure .bashrc exists
      become: true
      become_user: sreeram
      shell: "touch /home/sreeram/.bashrc"
      args:
        creates: "/home/sreeram/.bashrc"

    - name: Export RBENV_ROOT in /home/sreeram/.bashrc
      become: true
      become_user: sreeram
      lineinfile:
        dest: "/home/sreeram/.bashrc"
        regexp: "^export RBENV_ROOT="
        line: "export RBENV_ROOT=/home/sreeram/.rbenv"

    - name: Put rbenv in users PATH in /home/sreeram/.bashrc
      become: true
      become_user: sreeram
      lineinfile:
        dest: "/home/sreeram/.bashrc"
        regexp: "^PATH=\\$PATH:\\$RBENV_ROOT/bin"
        line: "PATH=$RBENV_ROOT/bin:$PATH"

    - name: Put $RBENV_ROOT/shims in users $PATH in /home/sreeram/.bashrc
      become: true
      become_user: sreeram
      lineinfile:
        dest: /home/sreeram/.bashrc
        regexp: "^PATH=\\$RBENV_ROOT/shims:\\$PATH"
        line: "PATH=$RBENV_ROOT/shims:$PATH"

    - name: Install Rubies
      become: yes
      become_user: sreeram
      shell: "/home/sreeram/.rbenv/bin/rbenv install 3.0.2"
      args:
        creates: "/home/sreeram/.rbenv/versions/3.0.2"
      with_flattened:
      - "3.0.2"

    - name: Check default ruby
      shell: '/home/sreeram/.rbenv/bin/rbenv version | grep -oE "^[^ ]+"'
      changed_when: no
      register: rbenv_current_version
      become: yes
      become_user: sreeram

    - name: Set default ruby
      shell: "/home/sreeram/.rbenv/bin/rbenv global 3.0.2"
      become: yes
      become_user: sreeram
      # when: rbenv_current_version.stdout != 3.0.2

    - name: Install Bundler
      shell: "/home/sreeram/.rbenv/shims/gem install bundler"
      become: yes
      become_user: sreeram
    
    - name: Install nginx
      apt:
        name: nginx
        state: latest

    # - name: Install yarn
    #   become: yes
    #   become_user: deploy 
    #   shell: "{{ item }}"
    #   with_items:
    #     - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    #     - echo 'deb https://dl.yarnpkg.com/debian/ stable main' | sudo tee /etc/apt/sources.list.d/yarn.list
    #     - sudo apt update
    #     - sudo apt install yarn

    - name: Add Yarn apt key
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg

    - name: Add Yarn repository
      apt_repository:
        repo: "deb https://dl.yarnpkg.com/debian/ stable main"
        filename: yarn

    - name: Install Yarn
      apt:
        name: yarn

    - name: Install NVM and node
      include_role:
        name: ansible-role-nvm
      vars:
        nodejs_version: "16.5.0"
        default: true
        nvm_dir: "/home/sreeram/.nvm"
        nvm_install: "curl"

    # - name: Remove NVM nvm_profile
    #   blockinfile:
    #     block: |
    #       export NVM_DIR="$HOME/.nvm"
    #       [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
    #     path: "/home/deploy/.bashrc"
    #     state: absent

    # - name: Install nvm
    #   git:
    #     dest: "/home/deploy/.nvm"
    #     repo: 'https://github.com/nvm-sh/nvm.git'
       

    # - name: Add NVM to nvm_profile
    #   blockinfile:
    #     block: |
    #       export NVM_DIR="$HOME/.nvm"
    #       [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" #This loads nvm
    #     create: yes
    #     marker_begin: "Installed nvm"
    #     marker_end: "END"
    #     mode: 0644
    #     path: "/home/deploy/.bashrc"
    #     state: present

    # - name: Install Node # noqa 305
    #   become: yes
    #   become_user: deploy
    #   shell: "/usr/bin/bash -ic nvm install 16.5.0"
      
    # - name: Set default version of Node if multiple versions exist # noqa 305
    #   shell: "/usr/bin/bash -ic nvm alias default 16.5.0"

