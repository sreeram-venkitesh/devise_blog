# ansible/site.yml

---
- hosts: rails
  remote_user: sreeram
  become: yes
  tasks:
    - name: Update all packages to the latest version
      apt:
        upgrade: dist
    - name: Add deploy user
      user:
        name: sreeram
        shell: /bin/bash
    - name: Add SSH key to server for deploy user
      authorized_key:
        user: sreeram
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC/spCXGRTFfP/J9ZLQuLF4bRf5Pjzx0wAdnLsUAsSBRN30aA9s22uDdw6c6RrEiD0vjsvygGR6g4GixJadzEXaQMZ0fH8hvX63WeUDJzqmXXaaaFz79WSQLKgSKhJcbYRkzrXeOoIqBYwvDRue0QPud9Fu2kPo27tjkrg7ol9zAYyuaxrwdUaKGuHmHqwScIScP7EKVEjPY7Cy4AoIdWryPn5YBmX3DJs48qxRo2pDGlQjVzqQKwswGl0pJVUZQU7p9LZJOE/pQqBLQQ23Iw6VtJaO72rnbZ3nEmKy8XZFUsIKW6E9wZ8hv0cKOG1BKHRClhRmq3tKcEvN3FLM+9PzYp5XZ9iCEGAUW91fJR8b1+cwTpeANRRJqJSswHhBezxjMwnlWOWxooS+x/5VwVKNdzJEwHsVPdBHvPWm2m5PwlIvF/ouS3dfcA2zUOarsn+3W1Jp+4nSJcbdjzvycOWNgif0zVQfWlOnrA8qO1Qnrj6ukA44YzF2GqszMVBE6h8= sreeram@Sreerams-MBP.domain.name"
    - name: Install Ruby dependencies
      apt:
        name: "{{ item }}"
      with_items:
        - gcc
        - autoconf
        - bison
        - build-essential
        - libssl-dev
        - libyaml-dev
        - libreadline6-dev
        - zlib1g-dev
        - libncurses5-dev
        - libffi-dev
        - libgdbm6
        - libgdbm-dev
        - sqlite3
        - libsqlite3-dev

    - name: Install rbenv
      become: yes
      become_user: sreeram 
      git:
        repo: "https://github.com/rbenv/rbenv.git"
        dest: /home/sreeram/.rbenv
        depth: 1
        accept_hostkey: yes
        clone: yes
        update: yes

    - name: Install ruby-build
      become: yes
      become_user: sreeram
      git:
        repo: "https://github.com/rbenv/ruby-build.git"
        dest: "/home/sreeram/.rbenv/plugins/ruby-build"
        depth: 1

    - name: Install rbenv-vars
      become: yes
      become_user: sreeram
      git:
        repo: "https://github.com/rbenv/rbenv-vars.git"
        dest: "/home/sreeram/.rbenv/plugins/rbenv-vars"
        depth: 1

    - name: Ensure .bashrc exists
      become: true
      become_user: sreeram
      shell: "touch /home/sreeram/.bashrc"
      args:
        creates: "/home/sreeram/.bashrc"

    - name: Export RBENV_ROOT in /home/sreeram/.bashrc
      become: true
      become_user: sreeram
      lineinfile:
        dest: "/home/sreeram/.bashrc"
        regexp: "^export RBENV_ROOT="
        line: "export RBENV_ROOT=/home/sreeram/.rbenv"

    - name: Put rbenv in users PATH in /home/sreeram/.bashrc
      become: true
      become_user: sreeram
      lineinfile:
        dest: "/home/sreeram/.bashrc"
        regexp: "^PATH=\\$PATH:\\$RBENV_ROOT/bin"
        line: "PATH=$RBENV_ROOT/bin:$PATH"

    - name: Put $RBENV_ROOT/shims in users $PATH in /home/sreeram/.bashrc
      become: true
      become_user: sreeram
      lineinfile:
        dest: /home/sreeram/.bashrc
        regexp: "^PATH=\\$RBENV_ROOT/shims:\\$PATH"
        line: "PATH=$RBENV_ROOT/shims:$PATH"

    - name: Install Rubies
      become: yes
      become_user: sreeram
      shell: "/home/sreeram/.rbenv/bin/rbenv install 3.0.2"
      args:
        creates: "/home/sreeram/.rbenv/versions/3.0.2"
      with_flattened:
      - "3.0.2"

    - name: Check default ruby
      shell: '/home/sreeram/.rbenv/bin/rbenv version | grep -oE "^[^ ]+"'
      changed_when: no
      register: rbenv_current_version
      become: yes
      become_user: sreeram

    - name: Set default ruby
      shell: "/home/sreeram/.rbenv/bin/rbenv global 3.0.2"
      become: yes
      become_user: sreeram
      # when: rbenv_current_version.stdout != 3.0.2

    - name: Install Bundler
      shell: "/home/sreeram/.rbenv/shims/gem install bundler"
      become: yes
      become_user: sreeram
    
    - name: Install Puma
      shell: "/home/sreeram/.rbenv/shims/gem install puma -v 5.5.2"
      become: yes
      become_user: sreeram

    - name: Install nginx
      apt:
        name: nginx
        state: latest

    - name: Add Yarn apt key
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg

    - name: Add Yarn repository
      apt_repository:
        repo: "deb https://dl.yarnpkg.com/debian/ stable main"
        filename: yarn

    # - block:
    - name: Install NVM and node
      include_role:
        name: ansible-role-nvm
      vars:
        nodejs_version: "16.4.2"
        default: true
        nvm_dir: "/home/sreeram/.nvm"
        nvm_profile: "/home/sreeram/.bashrc"
        nvm_install: "curl"
        ansible_become: true
        ansible_become_user: sreeram
    
    - name: Install yarn
      become: yes
      become_user: sreeram 
      shell: "{{ item }}"
      with_items:
        - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        - echo 'deb https://dl.yarnpkg.com/debian/ stable main' | sudo tee /etc/apt/sources.list.d/yarn.list
        - sudo apt update
        - sudo apt install yarn

    - name: Check if Service Exists
      stat: path=/etc/systemd/system/puma.service
      register: puma_service_status

    - name: Create Puma service
      template: src=puma.service dest=/etc/systemd/system/puma.service mode=644
      notify:
        - reload systemctl
      when: not puma_service_status.stat.exists

    - name: Start Puma service
      service: name=puma.service state=started enabled=yes

    - name: Remove the default app
      command: rm -rf /etc/nginx/sites-enabled/default

    - name: Remove the app's symlink, if exists
      command: rm -rf /etc/nginx/sites-enabled/devise_blog

    - name: Configure nginx for the app
      template: src=devise_blog.conf.j2 dest=/etc/nginx/sites-available/devise_blog group=www-data owner=www-data force=yes

    - name: Enable the app
      command: ln -s /etc/nginx/sites-available/devise_blog /etc/nginx/sites-enabled/devise_blog

    - name: Restart nginx
      action: service name=nginx state=restarted

    - name: Set permissions
      shell: sudo chown sreeram:sreeram -R apps/devise_blog/


    
